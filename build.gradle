plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
	id 'net.researchgate.release' version '3.0.2'
}

group = 'org.imd'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('customBeforeRelease') {
	doLast {
		println 'Custom before release !'
	}
}

tasks.register('customAfterRelease') {
	doLast {
		println 'Custom afters release !'
	}
}

beforeReleaseBuild.dependsOn customBeforeRelease

afterReleaseBuild.dependsOn customAfterRelease

release {
	failOnCommitNeeded = true
	failOnPublishNeeded = true
	failOnSnapshotDependencies = true
	failOnUnversionedFiles = true
	failOnUpdateNeeded = true
	revertOnFail = true
	preCommitText = ''
	preTagCommitMessage = '[Gradle Release Plugin] - pre tag commit: '
	tagCommitMessage = '[Gradle Release Plugin] - creating tag: '
	newVersionCommitMessage = '[Gradle Release Plugin] - new version commit: '
	tagTemplate = '${version}'
	versionPropertyFile = 'gradle.properties'
	versionProperties = []
	snapshotSuffix = '-SNAPSHOT'
	buildTasks = []
	ignoredSnapshotDependencies = []
//	versionPatterns = [
//			/(\d+)([^\d]*$)/: { Matcher m, Project p -> m.replaceAll("${(m[0][1] as int) + 1}${m[0][2]}") }
//	]
	pushReleaseVersionBranch = null
	scmAdapters = [
			net.researchgate.release.GitAdapter
	]

	git {
		requireBranch.set('main')
		pushToRemote.set('origin')
		pushToBranchPrefix.set('')
		commitVersionFileOnly.set(false)
		signTag.set(false)
	}
}
